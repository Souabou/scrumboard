[{"/Users/soumaya/Documents/BECODE2020/scrumboard/src/index.js":"1","/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/App.js":"2","/Users/soumaya/Documents/BECODE2020/scrumboard/src/store/index.js":"3","/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumList.js":"4","/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumActionButton.js":"5","/Users/soumaya/Documents/BECODE2020/scrumboard/src/actions/index.js":"6","/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumCard.js":"7","/Users/soumaya/Documents/BECODE2020/scrumboard/src/reducers/index.js":"8","/Users/soumaya/Documents/BECODE2020/scrumboard/src/actions/listsActions.js":"9","/Users/soumaya/Documents/BECODE2020/scrumboard/src/actions/cardsActions.js":"10","/Users/soumaya/Documents/BECODE2020/scrumboard/src/reducers/listsReducer.js":"11"},{"size":275,"mtime":1616014089869,"results":"12","hashOfConfig":"13"},{"size":1879,"mtime":1616056382258,"results":"14","hashOfConfig":"13"},{"size":137,"mtime":1616014089870,"results":"15","hashOfConfig":"13"},{"size":1726,"mtime":1616060670518,"results":"16","hashOfConfig":"13"},{"size":4082,"mtime":1616067720377,"results":"17","hashOfConfig":"13"},{"size":181,"mtime":1616014089864,"results":"18","hashOfConfig":"13"},{"size":937,"mtime":1616067748784,"results":"19","hashOfConfig":"13"},{"size":143,"mtime":1616014089869,"results":"20","hashOfConfig":"13"},{"size":567,"mtime":1616014089865,"results":"21","hashOfConfig":"13"},{"size":173,"mtime":1616014089863,"results":"22","hashOfConfig":"13"},{"size":3626,"mtime":1616014089870,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ggqo2y",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/soumaya/Documents/BECODE2020/scrumboard/src/index.js",[],["48","49"],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/App.js",["50"],"import React, { Component } from \"react\";\nimport ScrumList from './ScrumList';\nimport { connect } from \"react-redux\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { DragDropContext, Droppable, DroppAble } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\nimport styled from \"styled-components\";\n\nconst ListContainer = styled.div `\n  display: flex;\n  flex-direction: row;\n`;\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    console.log(result)\n    // todo: reording logic\n    const { destination, source, draggableId, type } = result;\n      console.log(result)\n    if (!destination) {\n     return; \n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <h2>SCRUMBOARD</h2>\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ListContainer \n                {...provided.droppableProps} \n                ref={provided.innerRef} \n              >\n                { lists.map((list, index) => (\n                  <ScrumList \n                    listID={list.id} \n                    key={list.id} \n                    title={list.title} \n                    cards={list.cards} \n                    index={index}\n                  />\n                ))}\n                {provided.placeholder}\n                <ScrumActionButton list />\n              </ListContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);\n","/Users/soumaya/Documents/BECODE2020/scrumboard/src/store/index.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumList.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumActionButton.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/actions/index.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumCard.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/reducers/index.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/actions/listsActions.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/actions/cardsActions.js",[],"/Users/soumaya/Documents/BECODE2020/scrumboard/src/reducers/listsReducer.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":38,"nodeType":"57","messageId":"58","endLine":5,"endColumn":47},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'DroppAble' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]