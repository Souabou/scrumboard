{"ast":null,"code":"import _objectSpread from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import Icon from\"@material-ui/core/icon\";import TextareaAutosize from'react-textarea-autosize';import Card from'@material-ui/core/Card';import Button from'@material-ui/core/Button';import{connect}from\"react-redux\";import{addList,addCard}from\"../actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ScrumActionButton=/*#__PURE__*/function(_React$Component){_inherits(ScrumActionButton,_React$Component);var _super=_createSuper(ScrumActionButton);function ScrumActionButton(){var _this;_classCallCheck(this,ScrumActionButton);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={formOpen:false,text:\"\"};_this.openForm=function(){_this.setState({formOpen:true});};_this.closeForm=function(){_this.setState({formOpen:false});};_this.handleInputChange=function(e){_this.setState({text:e.target.value});};_this.handleAddList=function(){var dispatch=_this.props.dispatch;var text=_this.state.text;if(text){_this.setState({text:\"\"});dispatch(addList(text));}return;};_this.handleAddCard=function(){var _this$props=_this.props,dispatch=_this$props.dispatch,listID=_this$props.listID;var text=_this.state.text;if(text){_this.setState({text:\"\"});dispatch(addCard(listID,text));}return;};_this.renderAddButton=function(){var list=_this.props.list;var buttonText=list?\"Add new list\":\"Add new card\";var buttonTextOpacity=list?1:0.5;var buttonTextColor=list?\"white\":\"inherit\";var buttonTextBackground=list?\"rgba(0,0,0,.25)\":\"inherit\";return/*#__PURE__*/_jsxs(\"div\",{onClick:_this.openForm,style:_objectSpread(_objectSpread({},styles.openFormButtonGroup),{},{opacity:buttonTextOpacity,color:buttonTextColor,backgroundColor:buttonTextBackground}),children:[/*#__PURE__*/_jsx(Icon,{children:\"add\"}),/*#__PURE__*/_jsx(\"p\",{children:buttonText})]});};_this.renderForm=function(){var list=_this.props.list;var placeholder=list?\"Enter a list title...\":\"Enter a message for this card...\";var buttonTitle=list?\"Add List\":\"Add Card\";return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Card,{style:{overflow:\"visible\",minHeight:80,minWidth:272,padding:\"6px 8px 2px\"},children:/*#__PURE__*/_jsx(TextareaAutosize,{placeholder:placeholder,autoFocus:true,onBlur:_this.closeForm,value:_this.state.text,onChange:_this.handleInputChange,style:{resize:\"none\",width:\"100%\",overflow:\"hidden\",outline:\"none\",border:\"none\"}})}),/*#__PURE__*/_jsxs(\"div\",{style:styles.formButtonGroup,children:[/*#__PURE__*/_jsxs(Button,{onMouseDown:list?_this.handleAddList:_this.handleAddCard,variant:\"contained\",style:{color:\"white\",backgroundColor:\"#F9690E\"},children:[buttonTitle,\" \",\" \"]}),/*#__PURE__*/_jsx(Icon,{style:{marginLeft:8,cursor:\"pointer\"},children:\"close\"})]})]});};return _this;}_createClass(ScrumActionButton,[{key:\"render\",value:function render(){return this.state.formOpen?this.renderForm():this.renderAddButton();}}]);return ScrumActionButton;}(React.Component);var styles={openFormButtonGroup:{display:\"flex\",alignItems:\"center\",cursor:\"pointer\",borderRadius:3,height:36,width:272,paddingLeft:10},formButtonGroup:{marginTop:8,display:\"flex\",alignItems:\"center\"}};export default connect()(ScrumActionButton);","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/ScrumActionButton.js"],"names":["React","Icon","TextareaAutosize","Card","Button","connect","addList","addCard","ScrumActionButton","state","formOpen","text","openForm","setState","closeForm","handleInputChange","e","target","value","handleAddList","dispatch","props","handleAddCard","listID","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","styles","openFormButtonGroup","opacity","color","backgroundColor","renderForm","placeholder","buttonTitle","overflow","minHeight","minWidth","padding","resize","width","outline","border","formButtonGroup","marginLeft","cursor","Component","display","alignItems","borderRadius","height","paddingLeft","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Icon from \"@material-ui/core/icon\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\n\nclass ScrumActionButton extends React.Component {\n\n    state = {\n        formOpen: false,\n        text:\"\"\n    };\n\n    openForm = () => {\n        this.setState({\n            formOpen: true\n        });\n    };\n\n    closeForm = () => {\n        this.setState({\n            formOpen: false\n        });\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            this.setState({\n                text:\"\"\n            });\n            dispatch(addList(text));\n        }\n\n        return;\n    };\n\n    handleAddCard = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            this.setState({\n                text:\"\"\n            });\n            dispatch(addCard(listID, text))\n        }\n\n        return;\n    };\n\n    renderAddButton = () => {\n        const { list } = this.props;\n\n        const buttonText = list ? \"Add new list\" : \"Add new card\";\n        const buttonTextOpacity = list ? 1 : 0.5;\n        const buttonTextColor = list ? \"white\" : \"inherit\";\n        const buttonTextBackground = list ? \"rgba(0,0,0,.25)\" : \"inherit\";\n\n        return (\n            <div \n            onClick={this.openForm}\n            style={{\n                ...styles.openFormButtonGroup,\n                opacity: buttonTextOpacity, color: buttonTextColor, backgroundColor: buttonTextBackground}}>\n                <Icon>add</Icon>\n                <p>{buttonText}</p>\n            </div>\n        )\n    };\n\n    renderForm = () => {\n        const { list } = this.props;\n\n        const placeholder = list ? \"Enter a list title...\" : \"Enter a message for this card...\";\n\n        const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n        return (\n            <div>\n                <Card \n                    style= { {\n                        overflow:\"visible\",\n                        minHeight: 80,\n                        minWidth: 272,\n                        padding: \"6px 8px 2px\"\n                    }}\n                >\n                    <TextareaAutosize \n                        placeholder={placeholder}  \n                        autoFocus\n                        onBlur={this.closeForm}\n                        value={this.state.text}\n                        onChange={this.handleInputChange}\n                        style={ {\n                            resize: \"none\",\n                            width: \"100%\",\n                            overflow: \"hidden\",\n                            outline: \"none\",\n                            border: \"none\"\n                        }}\n                    />\n                </Card>\n                <div style={styles.formButtonGroup}>\n                    <Button \n                        onMouseDown={list ? this.handleAddList : this.handleAddCard }\n                        variant=\"contained\" \n                        style={{ color: \"white\", backgroundColor: \"#F9690E\" }}\n                    >\n                        {buttonTitle} {\" \"}\n                    </Button>\n                    <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\nconst styles = {\n    openFormButtonGroup: {\n        display: \"flex\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n        borderRadius: 3,\n        height: 36,\n        width: 272,\n        paddingLeft: 10\n    },\n    formButtonGroup: {\n        marginTop: 8,\n        display: \"flex\",\n        alignItems: \"center\"\n    }\n};\n\nexport default connect () (ScrumActionButton);"]},"metadata":{},"sourceType":"module"}