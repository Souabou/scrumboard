{"ast":null,"code":"var _jsxFileName = \"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/ScrumList.js\";\nimport React from 'react';\nimport ScrumCard from \"./ScrumCard\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = styled.div`\n    background-color: #dfe3e6;\n    border-radius: 3px;\n    width: 300px;\n    padding: 8px;\n    height: 100%;\n    margin-right: 8px;\n`;\n_c = ListContainer;\n\nconst ScrumList = ({\n  title,\n  cards,\n  listID,\n  index\n}) => {\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: String(listID),\n    children: provided => /*#__PURE__*/_jsxDEV(ListContainer, { ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(ScrumCard, {\n        index: index,\n        text: card.text,\n        id: card.id\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(ScrumActionButton, {\n        listID: listID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ScrumList;\nexport default ScrumList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"ScrumList\");","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/ScrumList.js"],"names":["React","ScrumCard","ScrumActionButton","Droppable","Draggable","styled","ListContainer","div","ScrumList","title","cards","listID","index","String","provided","droppableProps","innerRef","map","card","text","id","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,a;;AAQN,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AACnD,sBAEI,QAAC,SAAD;AAAW,IAAA,WAAW,EAAEC,MAAM,CAACF,MAAD,CAA9B;AAAA,cACKG,QAAQ,iBACL,QAAC,aAAD,OACIA,QAAQ,CAACC,cADb;AAEA,MAAA,GAAG,EAAED,QAAQ,CAACE,QAFd;AAAA,8BAGI;AAAA,kBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKC,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAON,KAAP,kBACP,QAAC,SAAD;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,IAAI,EAAEM,IAAI,CAACC,IAHf;AAII,QAAA,EAAE,EAAED,IAAI,CAACE;AAJb,SACSF,IAAI,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,cADH,CAJL,EAYKN,QAAQ,CAACO,WAZd,eAaI,QAAC,iBAAD;AAAmB,QAAA,MAAM,EAAEV;AAA3B;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH,CAxBD;;MAAMH,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport ScrumCard from \"./ScrumCard\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst ListContainer = styled.div`\n    background-color: #dfe3e6;\n    border-radius: 3px;\n    width: 300px;\n    padding: 8px;\n    height: 100%;\n    margin-right: 8px;\n`;\nconst ScrumList = ({ title, cards, listID, index }) => {\n    return (\n        \n        <Droppable droppableId={String(listID)}>\n            {provided=>(\n                <ListContainer \n                {...provided.droppableProps} \n                ref={provided.innerRef}>\n                    <h4>{title}</h4>\n                    {cards.map((card, index) => (\n                        <ScrumCard \n                            key={card.id} \n                            index={index}\n                            text={card.text} \n                            id={card.id} \n                        /> \n                    ))}\n                    {provided.placeholder}\n                    <ScrumActionButton listID={listID} />\n                    \n                </ListContainer>\n            )}\n        </Droppable>\n    );\n};\n\nexport default ScrumList;"]},"metadata":{},"sourceType":"module"}