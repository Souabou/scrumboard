{"ast":null,"code":"import _objectSpread from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{Component}from\"react\";import ScrumList from'./ScrumList';import{connect}from\"react-redux\";import ScrumActionButton from\"./ScrumActionButton\";import{DragDropContext,Droppable,DroppAble}from\"react-beautiful-dnd\";import{sort}from\"../actions\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n\"])));var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onDragEnd=function(result){console.log(result);// todo: reording logic\nvar destination=result.destination,source=result.source,draggableId=result.draggableId,type=result.type;console.log(result);if(!destination){return;}_this.props.dispatch(sort(source.droppableId,destination.droppableId,source.index,destination.index,draggableId,type));};return _this;}_createClass(App,[{key:\"render\",value:function render(){var lists=this.props.lists;return/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:this.onDragEnd,children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"SCRUMBOARD\"}),/*#__PURE__*/_jsx(Droppable,{droppableId:\"all-lists\",direction:\"horizontal\",type:\"list\",children:function children(provided){return/*#__PURE__*/_jsxs(ListContainer,_objectSpread(_objectSpread({},provided.droppableProps),{},{ref:provided.innerRef,children:[lists.map(function(list,index){return/*#__PURE__*/_jsx(ScrumList,{listID:list.id,title:list.title,cards:list.cards,index:index},list.id);}),provided.placeholder,/*#__PURE__*/_jsx(ScrumActionButton,{list:true})]}));}})]})});}}]);return App;}(Component);var mapStateToProps=function mapStateToProps(state){return{lists:state.lists};};export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/App.js"],"names":["React","Component","ScrumList","connect","ScrumActionButton","DragDropContext","Droppable","DroppAble","sort","styled","ListContainer","div","App","onDragEnd","result","console","log","destination","source","draggableId","type","props","dispatch","droppableId","index","lists","provided","droppableProps","innerRef","map","list","id","title","cards","placeholder","mapStateToProps","state"],"mappings":"mjCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,OAASC,eAAT,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,qBAAtD,CACA,OAASC,IAAT,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGD,MAAM,CAACE,GAAV,6GAAnB,C,GAKMC,CAAAA,G,+SACJC,S,CAAY,SAACC,MAAD,CAAY,CACtBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACA;AAFsB,GAGdG,CAAAA,WAHc,CAG6BH,MAH7B,CAGdG,WAHc,CAGDC,MAHC,CAG6BJ,MAH7B,CAGDI,MAHC,CAGOC,WAHP,CAG6BL,MAH7B,CAGOK,WAHP,CAGoBC,IAHpB,CAG6BN,MAH7B,CAGoBM,IAHpB,CAIpBL,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACF,GAAI,CAACG,WAAL,CAAkB,CACjB,OACA,CAED,MAAKI,KAAL,CAAWC,QAAX,CACEd,IAAI,CACFU,MAAM,CAACK,WADL,CAEFN,WAAW,CAACM,WAFV,CAGFL,MAAM,CAACM,KAHL,CAIFP,WAAW,CAACO,KAJV,CAKFL,WALE,CAMFC,IANE,CADN,EAUD,C,qDAED,iBAAS,IACCK,CAAAA,KADD,CACW,KAAKJ,KADhB,CACCI,KADD,CAEP,mBACE,KAAC,eAAD,EAAiB,SAAS,CAAE,KAAKZ,SAAjC,uBACE,aAAK,SAAS,CAAC,KAAf,wBACE,kCADF,cAEE,KAAC,SAAD,EAAW,WAAW,CAAC,WAAvB,CAAmC,SAAS,CAAC,YAA7C,CAA0D,IAAI,CAAC,MAA/D,UACG,kBAAAa,QAAQ,qBACP,MAAC,aAAD,gCACMA,QAAQ,CAACC,cADf,MAEE,GAAG,CAAED,QAAQ,CAACE,QAFhB,WAIIH,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,CAAON,KAAP,qBACV,KAAC,SAAD,EACE,MAAM,CAAEM,IAAI,CAACC,EADf,CAGE,KAAK,CAAED,IAAI,CAACE,KAHd,CAIE,KAAK,CAAEF,IAAI,CAACG,KAJd,CAKE,KAAK,CAAET,KALT,EAEOM,IAAI,CAACC,EAFZ,CADU,EAAV,CAJJ,CAaGL,QAAQ,CAACQ,WAbZ,cAcE,KAAC,iBAAD,EAAmB,IAAI,KAAvB,EAdF,IADO,EADX,EAFF,GADF,EADF,CA2BD,C,iBAnDejC,S,EAsDlB,GAAMkC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCX,KAAK,CAAEW,KAAK,CAACX,KADmB,CAAL,EAA7B,CAIA,cAAetB,CAAAA,OAAO,CAACgC,eAAD,CAAP,CAAyBvB,GAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ScrumList from './ScrumList';\nimport { connect } from \"react-redux\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { DragDropContext, Droppable, DroppAble } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\nimport styled from \"styled-components\";\n\nconst ListContainer = styled.div `\n  display: flex;\n  flex-direction: row;\n`;\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    console.log(result)\n    // todo: reording logic\n    const { destination, source, draggableId, type } = result;\n      console.log(result)\n    if (!destination) {\n     return; \n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <h2>SCRUMBOARD</h2>\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ListContainer \n                {...provided.droppableProps} \n                ref={provided.innerRef} \n              >\n                { lists.map((list, index) => (\n                  <ScrumList \n                    listID={list.id} \n                    key={list.id} \n                    title={list.title} \n                    cards={list.cards} \n                    index={index}\n                  />\n                ))}\n                {provided.placeholder}\n                <ScrumActionButton list />\n              </ListContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}