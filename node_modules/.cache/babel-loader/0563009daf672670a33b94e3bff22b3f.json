{"ast":null,"code":"import _objectSpread from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{CONSTANTS}from\"../actions\";var listID=2;var cardID=6;var initialState=[{title:\"BACKLOG\",id:\"list-\".concat(0),cards:[{id:\"card-\".concat(0),text:\"Create User Stories\"},{id:\"card-\".concat(1),text:\"j'ai pas d'idées de texte, c'est super\"}]},{title:\"PLANNING\",id:\"list-\".concat(1),cards:[{id:\"card-\".concat(2),text:\"TO-DO tasks\"},{id:\"card-\".concat(3),text:\"j'ai toujours pas d'idées de tâches, c'est dingue\"},{id:\"card-\".concat(4),text:\"ça devient difficile d'avoir des idées qui viennent de nulle part, mon cerveau bouille\"},{id:\"card-\".concat(5),text:\"need to debug rn arghhh ... wouhou I did it \"}]}];var listsReducer=function listsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CONSTANTS.ADD_LIST:var newList={title:action.payload,cards:[],id:\"list-\".concat(listID)};listID+=1;return[].concat(_toConsumableArray(state),[newList]);case CONSTANTS.ADD_CARD:{var newCard={text:action.payload.text,id:\"card-\".concat(cardID)};cardID+=1;var _newState=state.map(function(list){if(list.id===action.payload.listID){return _objectSpread(_objectSpread({},list),{},{cards:[].concat(_toConsumableArray(list.cards),[newCard])});}else{return list;}});return _newState;}case CONSTANTS.DRAG_HAPPENED:var _action$payload=action.payload,droppableIdStart=_action$payload.droppableIdStart,droppableIdEnd=_action$payload.droppableIdEnd,droppableIndexStart=_action$payload.droppableIndexStart,droppableIndexEnd=_action$payload.droppableIndexEnd,type=_action$payload.type;var newState=_toConsumableArray(state);//dragging lists around\nif(type===\"list\"){var list=newState.splice(droppableIndexStart,1);newState.splice.apply(newState,[droppableIndexEnd,0].concat(_toConsumableArray(list)));return newState;}//in the same list\nif(droppableIdStart===droppableIdEnd){var _list$cards;console.log(\"same list\");var _list=state.find(function(list){return droppableIdStart===list.id;});var card=_list.cards.splice(droppableIndexStart,1);(_list$cards=_list.cards).splice.apply(_list$cards,[droppableIndexEnd,0].concat(_toConsumableArray(card)));}// other list\nif(droppableIdStart!==droppableIdEnd){var _listEnd$cards;// find the list where drag happened\nvar listStart=state.find(function(list){return droppableIdStart===list.id;});//pull out the card from the list\nvar _card=listStart.cards.splice(droppableIndexStart,1);// find the list where drag ended\nvar listEnd=state.find(function(list){return droppableIdEnd===list.id;});//put the card in the new list \n(_listEnd$cards=listEnd.cards).splice.apply(_listEnd$cards,[droppableIndexEnd,0].concat(_toConsumableArray(_card)));}return newState;default:return state;}};export default listsReducer;","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/reducers/listsReducer.js"],"names":["CONSTANTS","listID","cardID","initialState","title","id","cards","text","listsReducer","state","action","type","ADD_LIST","newList","payload","ADD_CARD","newCard","newState","map","list","DRAG_HAPPENED","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","splice","console","log","find","card","listStart","listEnd"],"mappings":"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","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nlet listID = 2;\nlet cardID = 6;\n\nconst initialState = [\n    {\n        title: \"BACKLOG\",\n        id: `list-${0}`,\n        cards: [\n            {\n                id: `card-${0}`,\n                text: \"Create User Stories\"\n            },\n            {\n                id: `card-${1}`,\n                text: \"j'ai pas d'idées de texte, c'est super\"\n            }\n        ]\n    },\n    {\n        title: \"PLANNING\",\n        id: `list-${1}`,\n        cards: [\n            {\n                id:`card-${2}`,\n                text: \"TO-DO tasks\"\n            },\n            {\n                id: `card-${3}`,\n                text: \"j'ai toujours pas d'idées de tâches, c'est dingue\"\n            },\n            {\n                id: `card-${4}`,\n                text: \"ça devient difficile d'avoir des idées qui viennent de nulle part, mon cerveau bouille\"\n            },\n            {\n                id: `card-${5}`,\n                text: \"need to debug rn arghhh ... wouhou I did it \"\n            }\n        ]\n    }\n\n];\n\nconst listsReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case CONSTANTS.ADD_LIST:\n            const newList = {\n                title: action.payload,\n                cards: [],\n                id: `list-${listID}`\n            };\n            listID += 1;\n            return [...state, newList];\n        \n        case CONSTANTS.ADD_CARD: {\n            const newCard = {\n                text: action.payload.text,\n                id: `card-${cardID}`\n            };\n            cardID += 1;\n\n            const newState = state.map(list => {\n                if (list.id === action.payload.listID) {\n                    return {\n                        ...list,\n                        cards: [...list.cards, newCard]\n                    }\n                } else {\n                    return list;\n                }\n            });\n\n            return newState;\n        }\n\n        case CONSTANTS.DRAG_HAPPENED:\n\n            const {\n                droppableIdStart,\n                droppableIdEnd,\n                droppableIndexStart,\n                droppableIndexEnd,\n                // draggableId\n                type\n            } = action.payload;\n            const newState = [...state];\n\n            //dragging lists around\n            if(type === \"list\") {\n                const list = newState.splice(droppableIndexStart, 1);\n                newState.splice(droppableIndexEnd, 0, ...list);\n                return newState;\n            }\n\n            //in the same list\n            if(droppableIdStart === droppableIdEnd) {\n                console.log(\"same list\")\n                const list = state.find(list => droppableIdStart === list.id);\n                const card = list.cards.splice(droppableIndexStart, 1);\n                list.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n            \n            // other list\n\n            if(droppableIdStart !== droppableIdEnd) {\n                // find the list where drag happened\n                const listStart = state.find(list => droppableIdStart === list.id);\n\n                //pull out the card from the list\n                const card = listStart.cards.splice(droppableIndexStart, 1);\n\n                // find the list where drag ended\n                const listEnd = state.find(list => droppableIdEnd === list.id);\n\n                //put the card in the new list \n                listEnd.cards.splice(droppableIndexEnd, 0, ...card)\n            }\n\n            return newState;\n\n        default: \n            return state;\n    }\n};\n\nexport default listsReducer;"]},"metadata":{},"sourceType":"module"}