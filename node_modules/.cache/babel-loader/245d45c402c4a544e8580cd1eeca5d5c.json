{"ast":null,"code":"var _jsxFileName = \"/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumActionButton.js\";\nimport React from \"react\";\nimport Icon from \"@material-ui/icons\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Card from '@material-ui/icons/Card';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScrumActionButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formOpen: false,\n      text: \"\"\n    };\n\n    this.openForm = () => {\n      this.setState({\n        formOpen: true\n      });\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        formOpen: false\n      });\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.handleAddList = () => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        text\n      } = this.state;\n\n      if (text) {\n        this.setState({\n          text: \"\"\n        });\n        dispatch(addList(text));\n      }\n\n      return;\n    };\n\n    this.handleAddCard = () => {\n      const {\n        dispatch,\n        listID\n      } = this.props;\n      const {\n        text\n      } = this.state;\n\n      if (text) {\n        this.setState({\n          text: \"\"\n        });\n        dispatch(addCard(listID, text));\n      }\n\n      return;\n    };\n\n    this.renderAddButton = () => {\n      const {\n        list\n      } = this.props;\n      const buttonText = list ? \"Add new list\" : \"Add new card\";\n      const buttonTextOpacity = list ? 1 : 0.5;\n      const buttonTextColor = list ? \"white\" : \"inherit\";\n      const buttonTextBackground = list ? \"rgba(0,0,0,.25)\" : \"inherit\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.openForm,\n        style: { ...styles.openFormButtonGroup,\n          opacity: buttonTextOpacity,\n          color: buttonTextColor,\n          backgroundColor: buttonTextBackground\n        },\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderForm = () => {\n      const {\n        list\n      } = this.props;\n      const placeholder = list ? \"Enter a list title...\" : \"Enter a message for this card...\";\n      const buttonTitle = list ? \"Add List\" : \"Add Card\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            overflow: \"visible\",\n            minHeight: 80,\n            minWidth: 272,\n            padding: \"6px 8px 2px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            placeholder: placeholder,\n            autoFocus: true,\n            onBlur: this.closeForm,\n            value: this.state.text,\n            onChange: this.handleInputChange,\n            style: {\n              resize: \"none\",\n              width: \"100%\",\n              overflow: \"hidden\",\n              outline: \"none\",\n              border: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formButtonGroup,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onMouseDown: list ? this.handleAddList : this.handleAddCard,\n            variant: \"contained\",\n            style: {\n              color: \"white\",\n              backgroundColor: \"#F9690E\"\n            },\n            children: [buttonTitle, \" \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            style: {\n              marginLeft: 8,\n              cursor: \"pointer\"\n            },\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n  }\n\n}\n\nconst styles = {\n  openFormButtonGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    borderRadius: 3,\n    height: 36,\n    width: 272,\n    paddingLeft: 10\n  },\n  formButtonGroup: {\n    marginTop: 8,\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\nexport default connect()(ScrumActionButton);","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/src/components/ScrumActionButton.js"],"names":["React","Icon","TextareaAutosize","Card","Button","connect","addList","addCard","ScrumActionButton","Component","state","formOpen","text","openForm","setState","closeForm","handleInputChange","e","target","value","handleAddList","dispatch","props","handleAddCard","listID","renderAddButton","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","styles","openFormButtonGroup","opacity","color","backgroundColor","renderForm","placeholder","buttonTitle","overflow","minHeight","minWidth","padding","resize","width","outline","border","formButtonGroup","marginLeft","cursor","render","display","alignItems","borderRadius","height","paddingLeft","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Icon from \"@material-ui/icons\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Card from '@material-ui/icons/Card';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\n\nclass ScrumActionButton extends React.Component {\n\n    state = {\n        formOpen: false,\n        text:\"\"\n    };\n\n    openForm = () => {\n        this.setState({\n            formOpen: true\n        });\n    };\n\n    closeForm = () => {\n        this.setState({\n            formOpen: false\n        });\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            this.setState({\n                text:\"\"\n            });\n            dispatch(addList(text));\n        }\n\n        return;\n    };\n\n    handleAddCard = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            this.setState({\n                text:\"\"\n            });\n            dispatch(addCard(listID, text))\n        }\n\n        return;\n    };\n\n    renderAddButton = () => {\n        const { list } = this.props;\n\n        const buttonText = list ? \"Add new list\" : \"Add new card\";\n        const buttonTextOpacity = list ? 1 : 0.5;\n        const buttonTextColor = list ? \"white\" : \"inherit\";\n        const buttonTextBackground = list ? \"rgba(0,0,0,.25)\" : \"inherit\";\n\n        return (\n            <div \n            onClick={this.openForm}\n            style={{\n                ...styles.openFormButtonGroup,\n                opacity: buttonTextOpacity, color: buttonTextColor, backgroundColor: buttonTextBackground}}>\n                <Icon>add</Icon>\n                <p>{buttonText}</p>\n            </div>\n        )\n    };\n\n    renderForm = () => {\n        const { list } = this.props;\n\n        const placeholder = list ? \"Enter a list title...\" : \"Enter a message for this card...\";\n\n        const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n        return (\n            <div>\n                <Card \n                    style= { {\n                        overflow:\"visible\",\n                        minHeight: 80,\n                        minWidth: 272,\n                        padding: \"6px 8px 2px\"\n                    }}\n                >\n                    <TextareaAutosize \n                        placeholder={placeholder}  \n                        autoFocus\n                        onBlur={this.closeForm}\n                        value={this.state.text}\n                        onChange={this.handleInputChange}\n                        style={ {\n                            resize: \"none\",\n                            width: \"100%\",\n                            overflow: \"hidden\",\n                            outline: \"none\",\n                            border: \"none\"\n                        }}\n                    />\n                </Card>\n                <div style={styles.formButtonGroup}>\n                    <Button \n                        onMouseDown={list ? this.handleAddList : this.handleAddCard }\n                        variant=\"contained\" \n                        style={{ color: \"white\", backgroundColor: \"#F9690E\" }}\n                    >\n                        {buttonTitle} {\" \"}\n                    </Button>\n                    <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\nconst styles = {\n    openFormButtonGroup: {\n        display: \"flex\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n        borderRadius: 3,\n        height: 36,\n        width: 272,\n        paddingLeft: 10\n    },\n    formButtonGroup: {\n        marginTop: 8,\n        display: \"flex\",\n        alignItems: \"center\"\n    }\n};\n\nexport default connect () (ScrumActionButton);"]},"metadata":{},"sourceType":"module"}