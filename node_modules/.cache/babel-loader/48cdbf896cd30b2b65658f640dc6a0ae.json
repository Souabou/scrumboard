{"ast":null,"code":"import _objectSpread from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import ScrumCard from\"./ScrumCard\";import ScrumActionButton from\"./ScrumActionButton\";import{Droppable,Draggable}from\"react-beautiful-dnd\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    background-color: #eac194;\\n    border-radius: 3px;\\n    width: 300px;\\n    padding: 10px 20px;\\n    height: 100%;\\n    margin-right: 8px;\\n\"])));var ScrumList=function ScrumList(_ref){var title=_ref.title,cards=_ref.cards,listID=_ref.listID,index=_ref.index;return/*#__PURE__*/_jsx(Draggable,{draggableId:String(listID),index:index,children:function children(provided){return/*#__PURE__*/_jsx(ListContainer,_objectSpread(_objectSpread(_objectSpread({},provided.draggableProps),{},{ref:provided.innerRef},provided.dragHandleProps),{},{children:/*#__PURE__*/_jsx(Droppable,{droppableId:String(listID),type:\"card\",children:function children(provided){return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},provided.droppableProps),{},{ref:provided.innerRef,children:[/*#__PURE__*/_jsx(\"h4\",{children:title}),cards.map(function(card,index){return/*#__PURE__*/_jsx(ScrumCard,{index:index,text:card.text,id:card.id},card.id);}),provided.placeholder,/*#__PURE__*/_jsx(ScrumActionButton,{listID:listID})]}));}})}));}});};export default ScrumList;","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/ScrumList.js"],"names":["React","ScrumCard","ScrumActionButton","Droppable","Draggable","styled","ListContainer","div","ScrumList","title","cards","listID","index","String","provided","draggableProps","innerRef","dragHandleProps","droppableProps","map","card","text","id","placeholder"],"mappings":"mYAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,OAASC,SAAT,CAAoBC,SAApB,KAAqC,qBAArC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGD,MAAM,CAACE,GAAV,mNAAnB,CAQA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAqC,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,KAA2B,MAA3BA,KAA2B,CAApBC,MAAoB,MAApBA,MAAoB,CAAZC,KAAY,MAAZA,KAAY,CACnD,mBACI,KAAC,SAAD,EAAW,WAAW,CAAEC,MAAM,CAACF,MAAD,CAA9B,CAAwC,KAAK,CAAEC,KAA/C,UACK,kBAAAE,QAAQ,qBACL,KAAC,aAAD,8CACQA,QAAQ,CAACC,cADjB,MAEI,GAAG,CAAED,QAAQ,CAACE,QAFlB,EAGQF,QAAQ,CAACG,eAHjB,4BAKI,KAAC,SAAD,EAAW,WAAW,CAAEJ,MAAM,CAACF,MAAD,CAA9B,CAAwC,IAAI,CAAC,MAA7C,UACK,kBAAAG,QAAQ,qBACL,2CAASA,QAAQ,CAACI,cAAlB,MAAkC,GAAG,CAAEJ,QAAQ,CAACE,QAAhD,wBACI,oBAAKP,KAAL,EADJ,CAEKC,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOR,KAAP,qBACP,KAAC,SAAD,EAEI,KAAK,CAAEA,KAFX,CAGI,IAAI,CAAEQ,IAAI,CAACC,IAHf,CAII,EAAE,CAAED,IAAI,CAACE,EAJb,EACSF,IAAI,CAACE,EADd,CADO,EAAV,CAFL,CAUKR,QAAQ,CAACS,WAVd,cAWI,KAAC,iBAAD,EAAmB,MAAM,CAAEZ,MAA3B,EAXJ,IADK,EADb,EALJ,GADK,EADb,EADJ,CA6BH,CA9BD,CAgCA,cAAeH,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport ScrumCard from \"./ScrumCard\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\n\nconst ListContainer = styled.div`\n    background-color: #eac194;\n    border-radius: 3px;\n    width: 300px;\n    padding: 10px 20px;\n    height: 100%;\n    margin-right: 8px;\n`;\nconst ScrumList = ({ title, cards, listID, index }) => {\n    return (\n        <Draggable draggableId={String(listID)} index={index}>\n            {provided => (\n                <ListContainer \n                    {...provided.draggableProps} \n                    ref={provided.innerRef}\n                    {...provided.dragHandleProps}\n                >\n                    <Droppable droppableId={String(listID)} type=\"card\">\n                        {provided=> (\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\n                                <h4>{title}</h4>\n                                {cards.map((card, index) => (\n                                    <ScrumCard \n                                        key={card.id} \n                                        index={index}\n                                        text={card.text} \n                                        id={card.id} \n                                    /> \n                                ))}\n                                {provided.placeholder}\n                                <ScrumActionButton listID={listID} />\n                            </div>\n                        )}\n                    </Droppable>\n                </ListContainer>\n            )}\n        </Draggable>\n    );\n};\n\nexport default ScrumList;"]},"metadata":{},"sourceType":"module"}