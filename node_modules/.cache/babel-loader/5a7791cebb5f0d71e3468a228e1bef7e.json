{"ast":null,"code":"var _jsxFileName = \"/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport ScrumList from './ScrumList';\nimport { connect } from \"react-redux\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n_c = ListContainer;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragEnd = result => {\n      // todo: reording logic\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n      console.log(result);\n\n      if (!destination) {\n        return;\n      }\n\n      this.props.dispatch(sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId));\n    };\n  }\n\n  render() {\n    const {\n      lists\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SCRUMBOARD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListContainer, {\n          children: [lists.map(list => /*#__PURE__*/_jsxDEV(ScrumList, {\n            listID: list.id,\n            title: list.title,\n            cards: list.cards\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(ScrumActionButton, {\n            list: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListContainer\");","map":{"version":3,"sources":["/Users/soumaya/Documents/BECODE2020/scrumboard/scrumboard/src/components/App.js"],"names":["React","Component","ScrumList","connect","ScrumActionButton","DragDropContext","sort","styled","ListContainer","div","App","onDragEnd","result","destination","source","draggableId","console","log","props","dispatch","droppableId","index","render","lists","map","list","id","title","cards","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAK;AAClC;AACA;AACA,CAHA;KAAMD,a;;AAKN,MAAME,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC1BU,SAD0B,GACbC,MAAD,IAAY;AACtB;AACA,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,UAAuCH,MAA7C;AACEI,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACF,UAAI,CAACC,WAAL,EAAkB;AACjB;AACA;;AAED,WAAKK,KAAL,CAAWC,QAAX,CACEb,IAAI,CACFQ,MAAM,CAACM,WADL,EAEFP,WAAW,CAACO,WAFV,EAGFN,MAAM,CAACO,KAHL,EAIFR,WAAW,CAACQ,KAJV,EAKFN,WALE,CADN;AASD,KAlByB;AAAA;;AAoB1BO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,wBACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAG,KAAKP,SAAlC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAA,qBACIY,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACd,QAAC,SAAD;AACE,YAAA,MAAM,EAAEA,IAAI,CAACC,EADf;AAGE,YAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,YAAA,KAAK,EAAEF,IAAI,CAACG;AAJd,aAEOH,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA,kBADA,CADJ,eASE,QAAC,iBAAD;AAAmB,YAAA,IAAI;AAAvB;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAxCyB;;AA4C5B,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACP;AADmB,CAAL,CAA7B;;AAIA,eAAepB,OAAO,CAAC0B,eAAD,CAAP,CAAyBnB,GAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ScrumList from './ScrumList';\nimport { connect } from \"react-redux\";\nimport ScrumActionButton from \"./ScrumActionButton\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { sort } from \"../actions\";\nimport styled from \"styled-components\";\n\nconst ListContainer = styled.div `\n  display: flex;\n  flex-direction: row;\n`;\n\nclass App extends Component {\n  onDragEnd = (result) => {\n    // todo: reording logic\n    const { destination, source, draggableId } = result;\n      console.log(result)\n    if (!destination) {\n     return; \n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId\n      )\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={ this.onDragEnd}>\n        <div className=\"App\">\n          <h2>SCRUMBOARD</h2>\n          <ListContainer>\n            { lists.map(list => (\n              <ScrumList \n                listID={list.id} \n                key={list.id} \n                title={list.title} \n                cards={list.cards} \n              />\n            ))}\n            <ScrumActionButton list />\n          </ListContainer>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}